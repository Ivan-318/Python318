Класс
class НазваниеКласса:
	свойства (поля, переменные)
		- статические -> за пределами init
		- динамические (свойства класса) -> внутри init
	методы (функции)
		- статические (@staticmethod -> def method()) -> это функция внутри класса
		- экземпляра класса (def method(self))
		- методы классов (@classmethod -> def method(cls))
	атрибуты = свойства + методы

Магические методы (dunder-методы) - отрабатывают каждый раз при создании экземпляра класса

Чтобы язык считался объектно-ориентированым, он должен соблюдать следующие парадигмы (уметь реализовывать свойства):
- инкапсуляция
- наследование
- полиморфизм (много форм одного и того же метода) - способность системы использовать объекты с одинаковым интерфейсом без информации о типе и внутренней структуре объекта (у одного действия несколько реализаций, в зависимости от того, с каким классом ведётся работа)

Модификаторы доступа:
public - self.name - открытый доступ
protected - self._name - используется при наследовании
private - self.__name - защищённый доступ (нельзя получить из вне)

Наследование

родительский (базовый, основной, суперкласс) класс
	дочерний (наследник, подкласс) класс
В Python не преветствуется дублирование кода(например, одинакового инициализатора):
DRY (Don`t Repeate Yourself) -  не повторяйся! -> помагает наследование

# Модули из стандартной библиотеки Python
# marshal - для чтения и записи bytecode модулей Python; поддерживал старое расширение (.pyc)
# pickle - формат Python, только все типы данных Python
# json - на любом ЯП

Методы для работы с pickle и json:

обращение к модулю.dump() - сохраняет данные в открытый файл
dumps() - сохраняет данные в строку (в оперативной памяти)

	- считать из файла:
load() - считывает данные из открытого файла
loads() - считывает данные из строки
"20": null, // у формата json все ключи строка

Парсинг сайтов 

Установка модулей

pip install requests -> для отправки http-запросов

csv (Comma Separated Values - переменные, разделённые запятыми или ";"-> у меня) - лёгкий текстовый документ, легко передаётся по сети. Позволяет наполнять себя большими объёмами данными для их передачи, хранения(интернет-маназин с большим объёмом ресурсов)
data.csv -> может читать Excel

Методы чтения .csv в Python:
reader => []
DictReader => {} - работает с данными как с элементами словаря

Методы для записи .csv из Python:
write => []
DictWrite => {} - работает с данными как с элементами словаря

запись csv компактнее JSON, csv новее JSON

pip install bs4 (beautifulsoup4) -> для извлечения *.html, *.htm. в Python нет тэгов, чтобы распознавать html-разметку

pip install lxml


